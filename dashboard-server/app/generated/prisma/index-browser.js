
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AddressesScalarFieldEnum = {
  id: 'id',
  country: 'country',
  administrative_area: 'administrative_area',
  sub_administrative_area: 'sub_administrative_area',
  locality: 'locality',
  dependent_locality: 'dependent_locality',
  postal_code: 'postal_code',
  thoroughfare: 'thoroughfare',
  premise: 'premise',
  sub_premise: 'sub_premise',
  organisation_name: 'organisation_name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ExercisesScalarFieldEnum = {
  id: 'id',
  exercise_name: 'exercise_name',
  description: 'description',
  muscle_group: 'muscle_group',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Player_exercise_progressScalarFieldEnum = {
  id: 'id',
  workout_assignment_id: 'workout_assignment_id',
  exercise_id: 'exercise_id',
  completed_sets: 'completed_sets',
  completed_reps: 'completed_reps',
  weight_used: 'weight_used',
  notes: 'notes',
  recorded_at: 'recorded_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SchoolsScalarFieldEnum = {
  id: 'id',
  school_name: 'school_name',
  address_id: 'address_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SportsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Team_primary_contactsScalarFieldEnum = {
  team_id: 'team_id',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TeamsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  is_school_team: 'is_school_team',
  school_id: 'school_id',
  sport_id: 'sport_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_teamsScalarFieldEnum = {
  team_id: 'team_id',
  user_id: 'user_id',
  role: 'role',
  start_date: 'start_date',
  end_date: 'end_date',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  last_name: 'last_name',
  email: 'email',
  is_admin: 'is_admin',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Workout_assignmentsScalarFieldEnum = {
  id: 'id',
  workout_id: 'workout_id',
  assignee_type: 'assignee_type',
  assignee_id: 'assignee_id',
  start_date: 'start_date',
  end_date: 'end_date',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Workout_exercisesScalarFieldEnum = {
  id: 'id',
  workout_id: 'workout_id',
  exercise_id: 'exercise_id',
  sets: 'sets',
  reps: 'reps',
  rest_interval: 'rest_interval',
  rpe: 'rpe',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.WorkoutsScalarFieldEnum = {
  id: 'id',
  created_by: 'created_by',
  workout_name: 'workout_name',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.user_team_role = exports.$Enums.user_team_role = {
  admin: 'admin',
  trainer: 'trainer',
  coach: 'coach',
  athlete: 'athlete'
};

exports.assignee_type_enum = exports.$Enums.assignee_type_enum = {
  team: 'team',
  user: 'user'
};

exports.Prisma.ModelName = {
  addresses: 'addresses',
  exercises: 'exercises',
  player_exercise_progress: 'player_exercise_progress',
  schools: 'schools',
  sports: 'sports',
  team_primary_contacts: 'team_primary_contacts',
  teams: 'teams',
  user_teams: 'user_teams',
  users: 'users',
  workout_assignments: 'workout_assignments',
  workout_exercises: 'workout_exercises',
  workouts: 'workouts'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
